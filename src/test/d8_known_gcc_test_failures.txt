# Expected failures from running the assembled GCC torture tests with d8.

# Toolchain problem: need some libc support.
# Not yet implemented.
# See wasm.js for the list of libc functions which are missing.
# The right place to put libc functionality would really be libc anyways.
20020406-1.c.s.wast.wasm
20020413-1.c.s.wast.wasm
20051113-1.c.s.wast.wasm
20101011-1.c.s.wast.wasm
960215-1.c.s.wast.wasm
960405-1.c.s.wast.wasm
align-2.c.s.wast.wasm
ipa-sra-2.c.s.wast.wasm
loop-2f.c.s.wast.wasm
loop-2g.c.s.wast.wasm
pr34456.c.s.wast.wasm
pr39228.c.s.wast.wasm
pr47237.c.s.wast.wasm
pr49218.c.s.wast.wasm
pr54471.c.s.wast.wasm
printf-1.c.s.wast.wasm
regstack-1.c.s.wast.wasm
strncmp-1.c.s.wast.wasm

# Program terminated with: Terminating wasm: abort()
# This could be a problem in any part of the toolchain (not just d8).
# It should never happen (the torture tests are self-validating).
20000910-2.c.s.wast.wasm
20001027-1.c.s.wast.wasm
20030125-1.c.s.wast.wasm
20050826-1.c.s.wast.wasm
20060110-1.c.s.wast.wasm
920612-1.c.s.wast.wasm
920711-1.c.s.wast.wasm
950915-1.c.s.wast.wasm
990222-1.c.s.wast.wasm
bitfld-3.c.s.wast.wasm
builtin-constant.c.s.wast.wasm
builtin-prefetch-4.c.s.wast.wasm
eeprof-1.c.s.wast.wasm
memcpy-bi.c.s.wast.wasm
memset-2.c.s.wast.wasm
pr22493-1.c.s.wast.wasm
pr32244-1.c.s.wast.wasm
pr34768-1.c.s.wast.wasm
pr34971.c.s.wast.wasm
pr43784.c.s.wast.wasm
pr48814-1.c.s.wast.wasm
pr57860.c.s.wast.wasm
pr59229.c.s.wast.wasm
simd-5.c.s.wast.wasm
strcmp-1.c.s.wast.wasm
string-opt-5.c.s.wast.wasm

# d8 segfault.
20011109-1.c.s.wast.wasm
20011219-1.c.s.wast.wasm
20021118-2.c.s.wast.wasm
20030903-1.c.s.wast.wasm
921208-1.c.s.wast.wasm
pr40668.c.s.wast.wasm
pr48809.c.s.wast.wasm
pr58574.c.s.wast.wasm
switch-1.c.s.wast.wasm
930513-1.c.s.wast.wasm

# Unknown exception: memory access out of bounds
20000412-2.c.s.wast.wasm
20000801-1.c.s.wast.wasm
20001228-1.c.s.wast.wasm
20010518-2.c.s.wast.wasm
20010915-1.c.s.wast.wasm
20021120-3.c.s.wast.wasm
20021219-1.c.s.wast.wasm
20030218-1.c.s.wast.wasm
20030221-1.c.s.wast.wasm
20030222-1.c.s.wast.wasm
20030313-1.c.s.wast.wasm
20031201-1.c.s.wast.wasm
20040218-1.c.s.wast.wasm
20041124-1.c.s.wast.wasm
20041126-1.c.s.wast.wasm
20050203-1.c.s.wast.wasm
20050502-1.c.s.wast.wasm
20050502-2.c.s.wast.wasm
20060420-1.c.s.wast.wasm
20070201-1.c.s.wast.wasm
20070517-1.c.s.wast.wasm
20071029-1.c.s.wast.wasm
20071030-1.c.s.wast.wasm
20071202-1.c.s.wast.wasm
20071219-1.c.s.wast.wasm
20080502-1.c.s.wast.wasm
20080522-1.c.s.wast.wasm
20101013-1.c.s.wast.wasm
20111212-1.c.s.wast.wasm
20120105-1.c.s.wast.wasm
20120808-1.c.s.wast.wasm
20120919-1.c.s.wast.wasm
20121108-1.c.s.wast.wasm
20140425-1.c.s.wast.wasm
920501-9.c.s.wast.wasm
930930-2.c.s.wast.wasm
960327-1.c.s.wast.wasm
980605-1.c.s.wast.wasm
990513-1.c.s.wast.wasm
991228-1.c.s.wast.wasm
builtin-prefetch-2.c.s.wast.wasm
memcpy-1.c.s.wast.wasm
pr15296.c.s.wast.wasm
pr20527-1.c.s.wast.wasm
pr27073.c.s.wast.wasm
pr27285.c.s.wast.wasm
pr29006.c.s.wast.wasm
pr33142.c.s.wast.wasm
pr33992.c.s.wast.wasm
pr34176.c.s.wast.wasm
pr35472.c.s.wast.wasm
pr36339.c.s.wast.wasm
pr36343.c.s.wast.wasm
pr37573.c.s.wast.wasm
pr38212.c.s.wast.wasm
pr38236.c.s.wast.wasm
pr39120.c.s.wast.wasm
pr40022.c.s.wast.wasm
pr40657.c.s.wast.wasm
pr41239.c.s.wast.wasm
pr42614.c.s.wast.wasm
pr42691.c.s.wast.wasm
pr43236.c.s.wast.wasm
pr43835.c.s.wast.wasm
pr44202-1.c.s.wast.wasm
pr44852.c.s.wast.wasm
pr45070.c.s.wast.wasm
pr49279.c.s.wast.wasm
pr51466.c.s.wast.wasm
pr51581-1.c.s.wast.wasm
pr51877.c.s.wast.wasm
pr51933.c.s.wast.wasm
pr52760.c.s.wast.wasm
pr54985.c.s.wast.wasm
pr56799.c.s.wast.wasm
pr56982.c.s.wast.wasm
pr57124.c.s.wast.wasm
pr57131.c.s.wast.wasm
pr58365.c.s.wast.wasm
pr59358.c.s.wast.wasm
pr60960.c.s.wast.wasm
string-opt-17.c.s.wast.wasm
struct-aliasing-1.c.s.wast.wasm

# Unknown exception: function signature mismatch
# Which function?
bcp-1.c.s.wast.wasm
pr28289.c.s.wast.wasm
pr34768-2.c.s.wast.wasm

# What is this?
# wasm.js:46: WasmModule::Instantiate(): 
# m = _WASMEXP_.instantiateModule(readbuffer(arguments[0]), ffi);
#               ^
pr38533.c.s.wast.wasm
